size=I(1),
alpha=I(0.6),                               #transparency
main="Life Expectancy vs Fertility (1960)" #title
)
#Visualize the 2013 dataset
qplot(data=merged2013, x=Fertility.Rate, y=Life.Exp,
colour=Region,                               #colour
size=I(1),
alpha=I(0.6),                               #transparency
main="Life Expectancy vs Fertility (1960)" #title
)
#Visualize the 2013 dataset
qplot(data=merged2013, x=Fertility.Rate, y=Life.Exp,
colour=Region,                               #colour
size=I(1),
alpha=I(0.6),                               #transparency
main="Life Expectancy vs Fertility (2013)" #title
)
getwd()
setwd("/Users/randhirprem/Desktop/r-projects")
get(wd)
getwd()
movies <- read.csv("P2-Movie-Ratings - P2-Movie-Ratings.csv",stringsAsFactors = T)
head(movies)
colnames(movies)
colnames(movies) <- c("Film", "Genre", "CriticRating", "AudienceRating", "BudgetMillions", "Year")
head(movies)
tail(movies)
str(movie)
str(movies)
summary(movies)
summary(movies)
str(movies)
summary(movies)
factor(Year)
factor(movies$Year)
movies$Year <- factor(movies$Year)
summary(movies)
str(movies)
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating)) + geom_point()
#colour
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, colour=Genre)) + geom_point()
#size
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre, size=Genre)) + geom_point()
#size better way
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre, size=Budget)) + geom_point()
#size better way
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre, size=BudgetMillions)) + geom_point()
#-------------Plotting With Layers---------
p <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre, size=BudgetMillions))
p + geom_point()
# Point
p + geom_point()
p + geom_line()
# Line
p + geom_line()
#Multiple layes
p + geom_point() +geom_line()
p + geom_line() +geom_point()
q <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre, size=BudgetMillions))
#add geom Layer
q + geom_point()
#overriding Aestics
q + geom_point(aes(size=CriticRaiting))
#overriding Aestics
q + geom_point(aes(size=CriticRaiting))
rlang::last_trace()
last_trace
#overriding Aestics
q + geom_point(aes(size=CriticRaiting))
q + geom_point(aes(colour=BudgetMillions))
#overriding Aestics
q + geom_point(aes(size=CriticRating))
q + geom_point(aes(colour=BudgetMillions))
q + geom_point()
#eg3
q + geom_point(aes(x=BudgetMillions))
#eg3
q + geom_point(aes(x=BudgetMillions)) + xlab("Budget Millions $$$")
#eg4
q + geom_line() + geom_point()
#eg4
q + geom_line() + geom_point()
#reduce line size
q + geom_line(size=1) + geom_point()
#eg3
q + geom_point(aes(x=BudgetMillions)) + xlab("Budget Millions $$$")
#----------------------- mapping vs setting
r <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating)
r + geom_point()
#----------------------- mapping vs setting
r <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
r + geom_point()
#Add Colour
#1.Mapping
r + geom_point(ase(colour=Genre))
#Add Colour
#1.Mapping
r + geom_point(aes(colour=Genre))
#2. Setting
r + geom_point(colour = "DarkGreen")
#Error
r + geom_point(aes(colour="DarkGreen"))
#2. Setting
r + geom_point(colour = "DarkGreen")
#Add Colour
#1.Mapping
r + geom_point(aes(colour=Genre))
# Mapping
r + geom_point(aes(size=BudgetMillions))
#setting
r + geom_point(size=10)
#error
r + geom_point(aes(size=10))
# Mapping
r + geom_point(aes(size=BudgetMillions))
s <- ggplot(data=movies, aes(x=BudgetMillions))
s + geom_histogram(binwidth = 10)
#add colour
s + geom_histogram(binwidth = 10, fill="green")
s + geom_histogram(binwidth = 10, aes(fill=Genre))
#add border
s + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
#sometime you may need density chart
s + geom_density(aes(fill=Genre), position = "stack")
#sometime you may need density chart
s + geom_density(aes(fill=Genre))
s + geom_density(aes(fill=Genre), position = "stack")
#----------------Starting Layer--------
t <- ggplot(data=movies, aes(x=AudienceRating))
t + geom_histogram(binwidth = 10, fill="White", colour="Blue")
t + geom_histogram(binwidth = 10,
aes(x=AudienceRating),
fill="White", colour="Blue")
#>> 4
t + geom_histogram(binwidth = 10,
aes(x=CriticRating),
fill="White", colour="Blue")
#>> 4
t + geom_histogram(binwidth = 10,
aes(x=CriticRating),
fill="White", colour="Blue")
#--------------------Statistical Transformation----------
?geom_smooth
u <- ggplot(data=movies), aes(x=CriticRating, y=AudienceRaiting, colour=Genre))
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRaiting, colour=Genre))
u + geom_point() + geom_smooth
u + geom_point() + geom_smooth()
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRaiting, colour=Genre))
u + geom_point() + geom_smooth()
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, colour=Genre))
u + geom_point() + geom_smooth()
u + geom_point() + geom_smooth(fill=NA)
#BOXPLOTS
u <- ggplot(data+movies, aes(x=Genre, y=AudienceRating, colour=Genre))
#BOXPLOTS
u <- ggplot(data=movies, aes(x=Genre, y=AudienceRating, colour=Genre))
u + geom_boxplot()
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1.2) + geom_points()
u + geom_boxplot(size=1.2) + geom_point()
#tip hack
u + geom_boxplot(size=1.2) + geom_jitter()
# another way:
u + geom_jitter() + geom_boxplot(size=1.2, alpha=0.5)
v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
#facets
v + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black") +
facets_grid(Gere~.)
#facets
v + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.)
#facets
v + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black") +
facet_grid(Genre~., scales="free")
#scatterplot
w <- ggplot(data=movies,aes(x=CriticRating, y=AudienceRating,
colour=Genre))
w + geom_point(size=3)
#Facets
w + geom_point(size=3) +
facet_grid(Genre~.)
w + geom_point(size=3) +
facet_grid(.~Year)
w + geom_point(size=3) +
facet_grid(Genre~Year)
w + geom_point(size=3) +
geom_smooth() +
facet_grid(Genre~Year)
w + geom_point(size=BudgetMillions) +
geom_smooth() +
facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) +
geom_smooth() +
facet_grid(Genre~Year)
#Zoom
m <- ggplot(data=movies,aes(x=CriticRating, y=AudienceRating,
size=BudgetMillions,
colour=Genre))
m + geim_point()
m + geom_point()
m + geom_point() +
xlim(50,100)
m + geom_point() +
xlim(50,100) +
ylim(50,100)
#wont work well always
n <- ggplot(data=movies, aes(x=BudgetMillions))
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
ylim(0,50)
#instead -zoom
n + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black") +
coord_cartesian(ylim=c(0,50))
#improve #1
w + geom_point(aes(size=BudgetMillions)) +
geom_smooth() +
facet_grid(Genre~Year) + coord_cartesian(ylim=c(0,100))
o + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
#-------------- Theme
o <- ggplot(data=movies, aes(x=BudgetMillions))
o + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
h < -o + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
h
h <- o + geom_histogram(binwidth = 10, aes(fill=Genre), colour="Black")
h
#axis label
h + xlab("Money Axis") +
ylab("Number of Movies")
#label formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30))
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20))
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20))
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20)
ledgen.position = c(1,1))
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20)
ledgend.position = c(1,1))
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20)
ledgend.position = c(1,1),)
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20)
ledgend.position = c(1,1),
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20)
legend.position = c(1,1),
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20)
legend.position = c(1,1),
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20)
legend.position = c(1,1),
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1)
)
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1)
)
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1)
plot.title = element_text(colour = "DarkBlue",
# legend mark formatting
# tick mark formatting
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour = "Dark Green", size=30),
axis.title.y = element_text(colour = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour = "DarkBlue",
size=40, family="Courier")
)
#Import the Data
getwd()
setwd("/Users/randhirprem/Desktop/r-projects")
mov <- read.csv("Section6-Homework-Data.csv")
#Data Exploration
head(mov) #top rows
summary(mov) #column summaries
mov <- read.csv("Section6-Homework-Data.csv", stringsAsFactors = T)
summary(mov) #column summaries
str(mov) #structure of the dataset
#Activate GGPlot2
#install.packages("ggplot2")
library(ggplot)
#Activate GGPlot2
#install.packages("ggplot2")
library(ggplot2)
#{Offtopic} This Is A Cool Insight:
ggplot(data=mov, aes(x=Day.of.Week)) + geom_bar()
filt <- (mov$Genre == "action") | (mov$Genre == "adventure") | (mov$Genre == "animation") | (mov$Genre == "comedy") | (mov$Genre == "drama")
#Now let's do the same for the Studio filter:
filt2 <- (mov$Studio == "Buena Vista Studios") | (mov$Studio == "WB") | (mov$Studio == "Fox") | (mov$Studio == "Universal") | (mov$Studio == "Sony") | (mov$Studio == "Paramount Pictures")
#Apply the row filters to the dataframe
mov2 <- mov[filt & filt2,]
#Prepare the plot's data and aes layers
#Note we did not rename the columns.
#Use str() or summary() to fin out the correct column names
p <- ggplot(data=mov2, aes(x=Genere, y=Gross...US))
View(mov2)
#Add a Point Geom Layer
p +
geom_point()
p #Nothing happens. We need a geom.
#Prepare the plot's data and aes layers
#Note we did not rename the columns.
#Use str() or summary() to fin out the correct column names
p <- ggplot(data=mov2, aes(x=Genre, y=Gross...US))
p #Nothing happens. We need a geom.
#Add a Point Geom Layer
p +
geom_point()
#Add a Point Geom Layer
p +
geom_boxplot()
#Add points
p +
geom_point() +
_()
#Add a boxplot instead of the points
p +
geom_boxplot()
#Add points
p +
geom_point() +
geom_jitter()
#Replace points with jitter
p +
geom_boxplot() +
geom_jitter()
#Place boxplot on top of jitter
p +
geom_jitter() +
geom_boxplot()
#Add boxplot transparency
p +
geom_jitter() +
geom_boxplot(alpha=0.7)
#Good. Now add size and colour to the points:
p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.7)
#Let's remove them:
p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
#Let's "Save" our progress by placing it into a new object:
q <- p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
q
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x  = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q
#Final touch. We haven't discussed this in the course,
#However this is how you can change individual legend titles:
q$labels$size = "Budget $M"
q
